#!/bin/bash
#
# Title:      PGBlitz (Reference Title File)
# Author(s):  Admin9705
# URL:        https://pgblitz.com - http://github.pgblitz.com
# GNU:        General Public License v3.0
################################################################################
---
- hosts: localhost
  gather_facts: false
  tasks:
    # FACTS #######################################################################
    - name: 'Set Known Facts'
      set_fact:
        pgrole: 'bookstack'
        intport: '80'
        extport: '6875'
        image: 'linuxserver/bookstack'
        db_image: 'linuxserver/mariadb'

    # CORE (MANDATORY) ############################################################
    # - name: 'Including cron job'
    #   include_tasks: '/opt/coreapps/apps/_core.yml'

    # - name: 'Including plugins '
    #   include_tasks: '/opt/coreapps/apps/_plugins.yml'

    - name: 'Checking for existing app data'
      stat:
        path: '/opt/appdata/{{pgrole}}/BOOKSTACK_APP_KEY.txt'
      register: confcheck

    # LABELS ######################################################################
    - name: 'Adding Traefik'
      set_fact:
        pg_labels:
          traefik.enable: 'true'
          traefik.port: '{{intport}}'
          traefik.frontend.auth.forward.address: '{{gauth}}'
          traefik.frontend.rule: 'Host:{{pgrole}}.{{domain.stdout}}{{tldset}}{{cname}}'
          traefik.frontend.headers.SSLHost: '{{domain.stdout}}'
          traefik.frontend.headers.SSLRedirect: 'true'
          traefik.frontend.headers.STSIncludeSubdomains: 'true'
          traefik.frontend.headers.STSPreload: 'true'
          traefik.frontend.headers.STSSeconds: '315360000'
          traefik.frontend.headers.browserXSSFilter: 'true'
          traefik.frontend.headers.contentTypeNosniff: 'true'
          traefik.frontend.headers.customResponseHeaders: 'X-Robots-Tag:noindex,nofollow,nosnippet,noarchive,notranslate,noimageindex'
          traefik.frontend.headers.forceSTSHeader: 'true'
          
    - name: 'Setting PG Volumes'
      set_fact:
        pg_volumes:
          - '/etc/localtime:/etc/localtime:ro'
          - '/opt/appdata/{{pgrole}}:/config'

    - name: 'Setting PG ENV'
      set_fact:
        pg_env:
          PUID: '1000'
          PGID: '1000'
          DB_HOST: '{{pgrole}}_db'
          DB_USER: '{{pgrole}}'
          DB_PASS: lookup('password', '/opt/appdata/{{pgrole}}/db_pw chars=ascii_letters')
          DB_DATABASE: '{{pgrole}}'
          APP_URL: '{{pgrole}}.{{domain.stdout}}{{tldset}}{{cname}}'

    - name: 'Setting PG ENV 2'
      set_fact:
        pg_env_db:
          PUID: '1000'
          PGID: '1000'
          TZ: 'America/New_York'
          MYSQL_ROOT_PASSWORD: lookup('password', '/opt/appdata/{{pgrole}}/mysql_root_pw chars=ascii_letters')
          MYSQL_USER: '{{pgrole}}'
          MYSQL_PASSWORD: lookup('password', '/opt/appdata/{{pgrole}}/db_pw chars=ascii_letters')
          MYSQL_DATABASE: '{{pgrole}}'

    # MAIN DEPLOYMENT #############################################################
    - name: 'Deploying {{pgrole}}'
      docker_compose:
        project_name: '{{pgrole}}'
        definition:
          version: '2'
          services:
            '{{pgrole}}':
              container_name: '{{pgrole}}'
              image: '{{image}}'
              pull: yes
              published_ports:
                - '{{ports.stdout}}{{extport}}:{{intport}}'
              volumes: '{{pg_volumes}}'
              env: '{{pg_env}}'
              restart_policy: unless-stopped
              networks:
                - name: plexguide
                  aliases:
                    - '{{pgrole}}'
              labels: '{{pg_labels}}'
              depends_on: '{{pgrole}}_db'
            '{{pgrole}}_db':
              container_name: '{{pgrole}}_db'
              image: '{{db_image}}'
              pull: yes
              volumes: '{{pg_volumes}}'
              env: '{{pg_env_db}}'
              restart_policy: unless-stopped
      register: output

    # AFTER ########################################################################
    - debug:
        var: output

    - assert:
        that:
          - "{{pgrole}}.{{pgrole}}_1.state.running"
          - "{{pgrole}}_db.{{pgrole}}_db_1.state.running"
